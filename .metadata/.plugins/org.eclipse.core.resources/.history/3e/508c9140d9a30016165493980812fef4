/**
 * 
 */
package com.subrat.linkedList;

public class SplitAlternateNodesInTwoLinkList {
    static Node head1,head2; 
    
    static class Node{
        private int data;
        private Node next;
        
        Node(int data){
            this.data = data;
            next = null;
        }
    }
    
    public void push(int newData){
       Node newNode = new Node(newData);
       Node temp = head2;
       
       if(head2==null){
           head2 = newNode;
           return;
       }
       
       while(temp.next!=null)
           temp = temp.next;
       
       temp.next = newNode;
       newNode.next = null;
    }
    
    public Node splitAlternate(Node node){
        if(node==null || node.next==null)
            return null;
        push(node.next.data);
        node.next = node.next.next;
        splitAlternate(node.next);
        return node;
    }
    
    public void printList(Node node){
        while(node!=null){
            System.out.print(node.data+" ");
            node = node.next;
        }
    }
    
    public static void main(String[] args){
        P42_SplitAlternateNodesInTwoLinkList ll = new P42_SplitAlternateNodesInTwoLinkList();
        
        ll.head1 = new Node(1);
        ll.head1.next = new Node(2);
        ll.head1.next.next = new Node(3);
        ll.head1.next.next.next = new Node(4);
        ll.head1.next.next.next.next = new Node(5);
        ll.head1.next.next.next.next.next = new Node(6);
        ll.head1.next.next.next.next.next.next = new Node(7);
        
        ll.printList(head1);
        System.out.println("\nList-1 :");
        head1 = ll.splitAlternate(head1);
        ll.printList(head1);
        System.out.println("\nList-2 :");
        ll.printList(head2);
    }
}
